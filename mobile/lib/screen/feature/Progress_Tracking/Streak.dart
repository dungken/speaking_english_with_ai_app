import 'package:flutter/material.dart';

class StreakScreen extends StatefulWidget {
  const StreakScreen({super.key});

  @override
  _StreakScreenState createState() => _StreakScreenState();
}

class _StreakScreenState extends State<StreakScreen> with SingleTickerProviderStateMixin {
  late AnimationController _animationController;
  late Animation<double> _iconPosition;

  @override
  void initState() {
    super.initState();

    // Kh·ªüi t·∫°o AnimationController
    _animationController = AnimationController(
      duration: const Duration(seconds: 2), // Th·ªùi gian m·ªói v√≤ng quay
      vsync: this,
    );

    // T·∫°o Animation cho v·ªã tr√≠ c·ªßa icon
    _iconPosition = Tween<double>(begin: 0.0, end: 0.2).animate(
      CurvedAnimation(
        parent: _animationController,
        curve: Curves.easeInOut, // T·∫°o hi·ªáu ·ª©ng m∆∞·ª£t m√†
      ),
    );

    // L·∫∑p l·∫°i chuy·ªÉn ƒë·ªông
    _animationController.repeat(reverse: true); // L·∫∑p l·∫°i v√† quay l·∫°i v·ªã tr√≠ ban ƒë·∫ßu
  }

  @override
  void dispose() {
    // ƒê·∫£m b·∫£o d·ª´ng AnimationController khi widget b·ªã h·ªßy
    _animationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    final mq = MediaQuery.of(context).size;

    return Scaffold(
      backgroundColor: Colors.white,
      appBar: AppBar(
        backgroundColor: Colors.white,
        elevation: 0,
        toolbarHeight: 0, // Hide AppBar space
      ),
      body: ListView(
        physics: const BouncingScrollPhysics(),
        padding: EdgeInsets.symmetric(horizontal: mq.width * 0.06),
        children: [
          SizedBox(height: mq.height * 0.02),

          // ü•≥ Ti√™u ƒë·ªÅ ch√∫c m·ª´ng
          Text(
            'Yeye Ch√∫c m·ª´ng b·∫°n!',
            style: TextStyle(
              fontSize: mq.width * 0.055,
              fontWeight: FontWeight.bold,
            ),
            textAlign: TextAlign.center,
          ),
          SizedBox(height: mq.height * 0.01),
          Text(
            'Ho√†n th√†nh m·ª•c ti√™u h√¥m nay r·ªìi ƒë√≥!',
            style: TextStyle(fontSize: mq.width * 0.04),
            textAlign: TextAlign.center,
          ),

          SizedBox(height: mq.height * 0.04),

          // üü† Icon m·∫∑t c∆∞·ªùi v·ªõi hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªông t·ª± ƒë·ªông
          Center(
            child: AnimatedBuilder(
              animation: _iconPosition,
              builder: (context, child) {
                return Stack(
                  children: [
                    Container(
                      height: mq.width * 0.4, // K√≠ch th∆∞·ªõc container cho icon
                      width: mq.width * 0.4,  // K√≠ch th∆∞·ªõc container cho icon
                      child: AnimatedPositioned(
                        duration: const Duration(milliseconds: 300),
                        left: _iconPosition.value * mq.width, // Di chuy·ªÉn icon
                        top: 0,
                        child: Container(
                          height: mq.width * 0.2, // K√≠ch th∆∞·ªõc icon
                          width: mq.width * 0.2, // K√≠ch th∆∞·ªõc icon
                          decoration: BoxDecoration(
                            color: Colors.orange,
                            shape: BoxShape.circle,
                          ),
                          child: Center(
                            child: Icon(
                              Icons.sentiment_satisfied_alt,
                              size: mq.width * 0.2,
                              color: Colors.white,
                            ),
                          ),
                        ),
                      ),
                    ),
                  ],
                );
              },
            ),
          ),

          SizedBox(height: mq.height * 0.04),

          // üì¶ Th·∫ª m·ª•c ti√™u h·ªçc 7 ng√†y
          Container(
            padding: EdgeInsets.all(mq.width * 0.05),
            decoration: BoxDecoration(
              color: Colors.white,
              borderRadius: BorderRadius.circular(mq.width * 0.06),
              boxShadow: [
                BoxShadow(
                  color: Colors.black.withOpacity(0.05),
                  blurRadius: 10,
                  offset: Offset(0, mq.height * 0.005),
                ),
              ],
            ),
            child: Column(
              children: [
                Text(
                  'H·ªçc 7 ng√†y li√™n ti·∫øp',
                  style: TextStyle(
                    fontSize: mq.width * 0.045,
                    fontWeight: FontWeight.w600,
                  ),
                ),
                SizedBox(height: mq.height * 0.025),

                // üî∂ Progress Bar
                ClipRRect(
                  borderRadius: BorderRadius.circular(mq.width * 0.05),
                  child: LinearProgressIndicator(
                    minHeight: mq.height * 0.012,
                    value: 0.6,
                    backgroundColor: Colors.grey[300],
                    valueColor:
                    const AlwaysStoppedAnimation<Color>(Colors.orange),
                  ),
                ),

                SizedBox(height: mq.height * 0.025),

                // üóìÔ∏è H√†ng ng√†y trong tu·∫ßn v·ªõi ng√¥i sao
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    for (var day in ['T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'CN'])
                      Column(
                        children: [
                          Icon(
                            Icons.star,
                            size: mq.width * 0.06,
                            color: (day == 'T4' || day == 'CN')
                                ? Colors.orange
                                : Colors.grey[300],
                          ),
                          SizedBox(height: mq.height * 0.005),
                          Text(
                            day,
                            style: TextStyle(fontSize: mq.width * 0.035),
                          ),
                        ],
                      )
                  ],
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
